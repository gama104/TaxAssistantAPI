// <auto-generated />
using System;
using IRSAssistantAPI.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IRSAssistantAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250909105803_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IRSAssistantAPI.Domain.Entities.Asset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("AnnualReturn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrentValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("PurchaseValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PurchaseYear")
                        .HasColumnType("int");

                    b.Property<Guid>("TaxpayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TaxpayerId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("IRSAssistantAPI.Domain.Entities.ChatMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChatSessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Confidence")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("ExecutionTimeMs")
                        .HasColumnType("int");

                    b.Property<string>("RawData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SqlQuery")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChatSessionId", "CreatedAt");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("IRSAssistantAPI.Domain.Entities.ChatSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastActivityAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TaxDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TaxpayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("TaxDocumentId");

                    b.HasIndex("TaxpayerId", "IsActive");

                    b.ToTable("ChatSessions");
                });

            modelBuilder.Entity("IRSAssistantAPI.Domain.Entities.Dependent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EligibleForCredit")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ssn")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("TaxpayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TaxpayerId");

                    b.ToTable("Dependents");
                });

            modelBuilder.Entity("IRSAssistantAPI.Domain.Entities.IncomeSource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("ReturnId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ReturnId", "Type");

                    b.ToTable("IncomeSources");
                });

            modelBuilder.Entity("IRSAssistantAPI.Domain.Entities.Property", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrentValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Expenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MortgageBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PurchaseYear")
                        .HasColumnType("int");

                    b.Property<decimal?>("RentalIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("TaxpayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TaxpayerId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("IRSAssistantAPI.Domain.Entities.TaxDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ProcessedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TaxYear")
                        .HasColumnType("int");

                    b.Property<Guid>("TaxpayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocumentType");

                    b.HasIndex("TaxpayerId", "TaxYear");

                    b.ToTable("TaxDocuments");
                });

            modelBuilder.Entity("IRSAssistantAPI.Domain.Entities.TaxReturn", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AGI")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceDue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Deductions")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FilingStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Refund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxCredits")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxLiability")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TaxYear")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxableIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("TaxpayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TaxpayerId", "TaxYear")
                        .IsUnique();

                    b.ToTable("TaxReturns");
                });

            modelBuilder.Entity("IRSAssistantAPI.Domain.Entities.Taxpayer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Ssn")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Ssn")
                        .IsUnique()
                        .HasFilter("[Ssn] IS NOT NULL");

                    b.ToTable("Taxpayers");
                });

            modelBuilder.Entity("IRSAssistantAPI.Domain.Entities.Asset", b =>
                {
                    b.HasOne("IRSAssistantAPI.Domain.Entities.Taxpayer", "Taxpayer")
                        .WithMany("Assets")
                        .HasForeignKey("TaxpayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Taxpayer");
                });

            modelBuilder.Entity("IRSAssistantAPI.Domain.Entities.ChatMessage", b =>
                {
                    b.HasOne("IRSAssistantAPI.Domain.Entities.ChatSession", "ChatSession")
                        .WithMany("Messages")
                        .HasForeignKey("ChatSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatSession");
                });

            modelBuilder.Entity("IRSAssistantAPI.Domain.Entities.ChatSession", b =>
                {
                    b.HasOne("IRSAssistantAPI.Domain.Entities.TaxDocument", null)
                        .WithMany("ChatSessions")
                        .HasForeignKey("TaxDocumentId");

                    b.HasOne("IRSAssistantAPI.Domain.Entities.Taxpayer", "Taxpayer")
                        .WithMany("ChatSessions")
                        .HasForeignKey("TaxpayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Taxpayer");
                });

            modelBuilder.Entity("IRSAssistantAPI.Domain.Entities.Dependent", b =>
                {
                    b.HasOne("IRSAssistantAPI.Domain.Entities.Taxpayer", "Taxpayer")
                        .WithMany("Dependents")
                        .HasForeignKey("TaxpayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Taxpayer");
                });

            modelBuilder.Entity("IRSAssistantAPI.Domain.Entities.IncomeSource", b =>
                {
                    b.HasOne("IRSAssistantAPI.Domain.Entities.TaxReturn", "TaxReturn")
                        .WithMany("IncomeSources")
                        .HasForeignKey("ReturnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaxReturn");
                });

            modelBuilder.Entity("IRSAssistantAPI.Domain.Entities.Property", b =>
                {
                    b.HasOne("IRSAssistantAPI.Domain.Entities.Taxpayer", "Taxpayer")
                        .WithMany("Properties")
                        .HasForeignKey("TaxpayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Taxpayer");
                });

            modelBuilder.Entity("IRSAssistantAPI.Domain.Entities.TaxDocument", b =>
                {
                    b.HasOne("IRSAssistantAPI.Domain.Entities.Taxpayer", "Taxpayer")
                        .WithMany("TaxDocuments")
                        .HasForeignKey("TaxpayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Taxpayer");
                });

            modelBuilder.Entity("IRSAssistantAPI.Domain.Entities.TaxReturn", b =>
                {
                    b.HasOne("IRSAssistantAPI.Domain.Entities.Taxpayer", "Taxpayer")
                        .WithMany("TaxReturns")
                        .HasForeignKey("TaxpayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Taxpayer");
                });

            modelBuilder.Entity("IRSAssistantAPI.Domain.Entities.ChatSession", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("IRSAssistantAPI.Domain.Entities.TaxDocument", b =>
                {
                    b.Navigation("ChatSessions");
                });

            modelBuilder.Entity("IRSAssistantAPI.Domain.Entities.TaxReturn", b =>
                {
                    b.Navigation("IncomeSources");
                });

            modelBuilder.Entity("IRSAssistantAPI.Domain.Entities.Taxpayer", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("ChatSessions");

                    b.Navigation("Dependents");

                    b.Navigation("Properties");

                    b.Navigation("TaxDocuments");

                    b.Navigation("TaxReturns");
                });
#pragma warning restore 612, 618
        }
    }
}
